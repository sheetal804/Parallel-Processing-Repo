#include<stdio.h>
#include<stdlib.h>
int or_operation(int a, int b){
	return a>=b?a:b;
}
void warshall(int **mat,int n){
	int i,j,k,s,t;
	int **r1=(int **)malloc(sizeof(int *)*n);
	int **r2=(int **)malloc(sizeof(int *)*n);

	// copy matrix into r[0]

	for(i=0;i<n;i++){
		r1[i]=(int *)malloc(sizeof(int)*n);
		r2[i]=(int *)malloc(sizeof(int)*n);
		for(j=0;j<n;j++){
			r1[i][j]=mat[i][j];
		}
	}
	
	// Calculation 

	for(k=1;k<n;k++){
		for(i=0;i<n;i++){
			for(j=0;j<n;j++)
				r2[i][j] = or_operation( r1[i][j] , (r1[i][k]*r1[k][j]) );
		}
		for(s=0;s<n;s++){
			for(t=0;t<n;t++){
				r1[s][t]=r2[s][t];
			}
		}
	}

	// result
		
	printf("Result \n");
	for(i=0;i<n;i++){
		for(j=0;j<n;j++)
			printf("%d ",r2[i][j]);
		printf("\n");
	}
	
	//Free Memory

	for(i=n-1;i>=0;i--){
		free(r1[i]);
		free(r2[i]);
	}
	printf("memory unallocated.\n");
}
int main(){
	int v,i,j;
	float p,temp;
	printf("Enter the number of vertices :");
	scanf("%d",&v);
	printf("Enter the inclusion probability :");
	scanf("%f",&p);
	int **mat=malloc(sizeof(int *)*v);
	for(i=0;i<v;i++)
		mat[i]=(int *)malloc(sizeof(int)*v);
	for(i=0;i<v;i++){
		for(j=0;j<v;j++){
			//temp=(float)rand()/RAND_MAX;
			//if(temp < p)
			//	mat[i][j]=1;
			scanf("%d",&mat[i][j]);
		}
	}
	FILE *fp=fopen("matlog.txt","w");
	fprintf(fp,"%d\n",v);
	for(i=0;i<v;i++){
		for(j=0;j<v;j++){
			printf("%d ",mat[i][j]);
			fprintf(fp,"%d ",mat[i][j]);
		}
		printf("\n");
		fprintf(fp,"\n");
	}
	warshall(mat,v);
	fclose(fp);
	for(i=v-1;i>=0;i--)
		free(mat[i]);
	return 0;
}
